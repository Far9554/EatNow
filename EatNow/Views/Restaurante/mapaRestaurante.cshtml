@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model Restaurante

<link rel="stylesheet" type="text/css" href="~/css/map.css">

<div id="MainContainer">
    <div id="MapContainer">
    </div>
</div>

<!--== MODAL ==-->
<div class="modal fade" id="Modal" tabindex="-1" aria-labelledby="ModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Reserva</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-area="" asp-controller="restaurante" asp-action="ConfirmacionReserva">
                <div class="modal-body">
                        <div class="mb-3">
                            <label for="Hora" class="col-form-label">Hora:</label>
                            <select id="Hora" class="form-control form-select" name="Hora" onchange="UpdateHoursSelec()">
                                @for (int i = int.Parse(Model.HoraApertura.Substring(0, 2)); i <= int.Parse(Model.HoraCierre.Substring(0, 2)); i++)
                                {
                                    if (i <= DateTime.Now.Hour)
                                    {
                                        <option disabled value="@i:00">@i:00</option>
                                    }
                                    else
                                    {
                                        <option value="@i:00">@i:00</option>
                                    }
                                }
                            </select>
                            <label for="Fecha" class="col-form-label">Fecha:</label>
                            <input type="date" class="form-control" name="Fecha" id="Fecha">
                        </div>
                        <div class="mb-3">
                            <input type="number" class="form-control" name="IdCliente" id="RIdCliente" value="@ViewBag.IdCliente" style="display:none">
                            <input type="number" class="form-control" name="IdCasilla" id="RIdCasilla" style="display:none">
                        </div>
                </div>
                <div class="modal-footer">
                    <button type="reset" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Hacer Reserva</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    var Modal = document.getElementById('Modal')
    Modal.addEventListener('show.bs.modal', function (event) {
        // Button that triggered the modal
        var button = event.relatedTarget
        // Extract info from data-bs-* attributes
        var recipient = button.getAttribute('data-bs-whatever')
        // If necessary, you could initiate an AJAX request here
        // and then do the updating in a callback.
        //
        // Update the modal's content.
        var modalTitle = Modal.querySelector('.modal-title')
        var modalIdCasilla = Modal.querySelector('#RIdCasilla')
        var modalCords = Modal.querySelector('#Coordenadas')

        modalTitle.textContent = 'Reserva Mesa ' + recipient
        modalIdCasilla.value = recipient;
    })

    let GridSizeX = 15;
    let GridSizeY = 15;

    let container = document.getElementById('MapContainer');
    let HoraInput = document.getElementById('Hora');
    let FechaInput = document.getElementById('Fecha');

    window.onload = CreateNewTable();
    //window.onload = GetCasillas();

    function UpdateHoursSelec() {

    }

    function CreateNewTable() {
        const body = document.body;

        const tbl = document.createElement('table');
        tbl.id = "mapa";

        for (let i = 0; i < GridSizeY; i++) {
            const tr = tbl.insertRow();
            for (let j = 0; j < GridSizeX; j++) {
                const td = tr.insertCell();
                td.id = i + "-" + j;
                td.width = 630 / GridSizeY;
                td.height = 630 / GridSizeX;
            }
        }
        container.appendChild(tbl);
        GetCasillas();

        FechaInput.valueAsDate = new Date();
        FechaInput.min = new Date().toISOString().split("T")[0];
    }

    function SetTable(casillasRestaurante) {
        casillasRestaurante.forEach(function (cR) {
            let cords = cR.Y + '-' + cR.X;

            if (cR.EsMesa == false)
                SetState(1);
            else {
                SetState(2);

                cas = document.getElementById(cords); 

                const btn = document.createElement('button');
                btn.type = "button";
                btn.style.width = "100%";
                btn.style.height = "100%";
                btn.style.borderRadius = "0 !important";
                btn.style.backgroundColor = "transparent";
                btn.style.border = "none";

                btn.setAttribute("data-bs-toggle", "modal"); 
                btn.setAttribute("data-bs-target", "#Modal");
                btn.setAttribute("data-bs-whatever", cR.IdCasilla);

                cas.appendChild(btn);
            }

            ChangeState(cords);
        });
    }

    let PencilDraw = 0;

    function SetState(type) {
        PencilDraw = type;
    }

    function ChangeState(IdCasilla) {
        let Casilla = document.getElementById(IdCasilla);
        let cords = Casilla.id.split("-");

        if (PencilDraw == 0) {
            Casilla.classList.remove("Aire");
            Casilla.classList.remove("Mesa");
        }
        else if (PencilDraw == 1) {
            Casilla.classList.add("Aire");
            Casilla.classList.remove("Mesa");
        }
        else if (PencilDraw == 2) {
            Casilla.classList.remove("Aire");
            Casilla.classList.add("Mesa");
        }
    }

    function GetCasillas() {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetCasillas", "Restaurante")",
            data: { idRestaurante: @Model.IdRestaurante },
            dataType: "json",
            success: function (casillasJson) {
                // Convertir el JSON a una array de objetos CasillasJS
                var casillasArray = JSON.parse(casillasJson);
                if (casillasArray != null) {
                    console.log(casillasArray);
                    SetTable(casillasArray);
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    }

    function PushCasillas() {
        // Convertir el array a una cadena JSON
        let casillasG = casillas.filter(c => c.esAire == true);
        console.log(casillasG);
        var jsonMiArray = JSON.stringify(casillasG);

        console.log(jsonMiArray);

        $.ajax({
            type: "POST",
            url: "@Url.Action("SaveCasillas", "Empleado")",
            data: { casillasJson: jsonMiArray },
            dataType: "json",
            success: function (data) {
                console.log(data);
            },
            error: function (error) {
                console.log(error);
            }
        });
    }

</script>